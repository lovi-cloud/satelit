syntax = "proto3";

package satelit;
option  go_package = ".;satelit";

service Satelit {
  rpc ShowVolume(ShowVolumeRequest) returns (ShowVolumeResponse) {}
  rpc ListVolume(ListVolumeRequest) returns (ListVolumeResponse) {}
  rpc AddVolume(AddVolumeRequest) returns (AddVolumeResponse) {}
  rpc AddVolumeImage(AddVolumeImageRequest) returns (AddVolumeImageResponse) {}
  rpc AttachVolume(AttachVolumeRequest) returns (AttachVolumeResponse) {}
  rpc DetachVolume(DetachVolumeRequest) returns (DetachVolumeResponse) {}
  rpc DeleteVolume(DeleteVolumeRequest) returns (DeleteVolumeResponse) {}
  rpc ListImage(ListImageRequest) returns (ListImageResponse) {}
  rpc UploadImage(stream UploadImageRequest) returns (UploadImageResponse) {}
  rpc DeleteImage(DeleteImageRequest) returns (DeleteImageResponse) {}

  rpc CreateSubnet(CreateSubnetRequest) returns (CreateSubnetResponse) {}
  rpc GetSubnet(GetSubnetRequest) returns (GetSubnetResponse) {}
  rpc ListSubnet(ListSubnetRequest) returns (ListSubnetResponse) {}
  rpc DeleteSubnet(DeleteSubnetRequest) returns (DeleteSubnetResponse) {}
  rpc CreateAddress(CreateAddressRequest) returns (CreateAddressResponse) {}
  rpc GetAddress(GetAddressRequest) returns (GetAddressResponse) {}
  rpc ListAddress(ListAddressRequest) returns (ListAddressResponse) {}
  rpc DeleteAddress(DeleteAddressRequest) returns (DeleteAddressResponse) {}
  rpc CreateLease(CreateLeaseRequest) returns (CreateLeaseResponse) {}
  rpc GetLease(GetLeaseRequest) returns (GetLeaseResponse) {}
  rpc ListLease(ListLeaseRequest) returns (ListLeaseResponse) {}
  rpc DeleteLease(DeleteLeaseRequest) returns (DeleteLeaseResponse) {}

  rpc AddVirtualMachine(AddVirtualMachineRequest)
      returns (AddVirtualMachineResponse) {}
  rpc StartVirtualMachine(StartVirtualMachineRequest)
      returns (StartVirtualMachineResponse) {}
  rpc ShowVirtualMachine(ShowVirtualMachineRequest)
      returns (ShowVirtualMachineResponse) {}
  rpc DeleteVirtualMachine(DeleteVirtualMachineRequest)
      returns (DeleteVirtualMachineResponse) {}

  rpc CreateBridge(CreateBridgeRequest) returns (CreateBridgeResponse) {}
  rpc CreateInternalBridge(CreateInternalBridgeRequest)
      returns (CreateInternalBridgeResponse) {}
  rpc GetBridge(GetBridgeRequest) returns (GetBridgeResponse) {}
  rpc ListBridge(ListBridgeRequest) returns (ListBridgeResponse) {}
  rpc DeleteBridge(DeleteBridgeRequest) returns (DeleteBridgeResponse) {}
  rpc AttachInterface(AttachInterfaceRequest)
      returns (AttachInterfaceResponse) {}
  rpc DetachInterface(DetachInterfaceRequest)
      returns (DetachInterfaceResponse) {}
  rpc GetAttachment(GetAttachmentRequest) returns (GetAttachmentResponse) {}
  rpc ListAttachment(ListAttachmentRequest) returns (ListAttachmentResponse) {}

  rpc AddCPUPinningGroup(AddCPUPinningGroupRequest)
      returns (AddCPUPinningGroupResponse) {}
}

// type
message Volume {
  string id                = 1;
  bool   attached          = 2;
  string hostname          = 3;
  uint32 capacity_gigabyte = 4;
}

message Image {
  string id          = 1;
  string name        = 2;
  string volume_id   = 3;
  string description = 4;
}

message Subnet {
  string uuid            = 1;
  string name            = 2;
  uint32 vlan_id         = 9;
  string network         = 3;
  string start           = 4;
  string end             = 5;
  string gateway         = 6;
  string dns_server      = 7;
  string metadata_server = 8;
}

message Address {
  string uuid      = 1;
  string ip        = 2;
  string subnet_id = 3;
}

message Lease {
  string uuid        = 1;
  string mac_address = 2;
  string address_id  = 3;
}

message VirtualMachine {
  string uuid            = 1;
  string name            = 2;
  uint32 vcpus           = 3;
  uint64 memory_kib      = 4;
  string hypervisor_name = 5;
  uint32 root_volume_gb  = 6;
  uint32 read_bytes_sec  = 7;
  uint32 write_bytes_sec = 8;
  uint32 read_iops_sec   = 9;
  uint32 write_iops_sec  = 10;
  string source_image_id = 11;
}

message Bridge {
  string uuid    = 1;
  uint32 vlan_id = 2;
  string name    = 3;
}

message InterfaceAttachment {
  string uuid               = 1;
  string virtual_machine_id = 2;
  string bridge_id          = 3;
  int64  average            = 4;
  string name               = 5;
  string lease_id           = 6;
}

message CPUPinningGroup {
  string uuid          = 1;
  string name          = 2;
  uint32 count_of_core = 3;
}

// Request / Response
message ShowVolumeRequest {
  string id = 1;
}

message ShowVolumeResponse {
  Volume volume = 1;
}

message ListVolumeRequest {}

message ListVolumeResponse {
  repeated Volume volumes = 1;
}

message AddVolumeRequest {
  string name              = 1;
  uint32 capacity_gigabyte = 2;
}

message AddVolumeResponse {
  Volume volume = 1;
}

message AddVolumeImageRequest {
  string name              = 1;
  uint32 capacity_gigabyte = 2;
  string source_image_id   = 3;
}

message AddVolumeImageResponse {
  Volume volume = 1;
}

message AttachVolumeRequest {
  string id       = 1;
  string hostname = 2;
}

message AttachVolumeResponse {}

message DetachVolumeRequest {
  string id = 1;
}

message DetachVolumeResponse {}

message DeleteVolumeRequest {
  string id = 1;
}

message DeleteVolumeResponse {}

message ListImageRequest {}

message ListImageResponse {
  repeated Image images = 1;
}

message UploadImageRequest {
  oneof value {
    UploadImageRequestMeta  meta  = 1;
    UploadImageRequestChunk chunk = 2;
  }
}

message UploadImageRequestMeta {
  string name        = 1;
  string description = 2;
}

message UploadImageRequestChunk {
  bytes data     = 1;
  int64 position = 2;
}

message UploadImageResponse {
  Image image = 1;
}

message DeleteImageRequest {
  string id = 1;
}

message DeleteImageResponse {}

message CreateSubnetRequest {
  string name            = 1;
  string network         = 2;
  uint32 vlan_id         = 8;
  string start           = 3;
  string end             = 4;
  string gateway         = 5;
  string dns_server      = 6;
  string metadata_server = 7;
}

message CreateSubnetResponse {
  Subnet subnet = 1;
}

message GetSubnetRequest {
  string uuid = 1;
}

message GetSubnetResponse {
  Subnet subnet = 1;
}

message ListSubnetRequest {}

message ListSubnetResponse {
  repeated Subnet subnets = 1;
}

message DeleteSubnetRequest {
  string uuid = 1;
}

message DeleteSubnetResponse {}

message CreateAddressRequest {
  string subnet_id = 1;
  string fixed_ip  = 2;
}

message CreateAddressResponse {
  Address address = 1;
}

message GetAddressRequest {
  string uuid = 1;
}

message GetAddressResponse {
  Address address = 1;
}

message ListAddressRequest {
  string subnet_id = 1;
}

message ListAddressResponse {
  repeated Address addresses = 1;
}

message DeleteAddressRequest {
  string uuid = 1;
}

message DeleteAddressResponse {}

message CreateLeaseRequest {
  string address_id = 1;
}

message CreateLeaseResponse {
  Lease lease = 1;
}

message GetLeaseRequest {
  string uuid = 1;
}

message GetLeaseResponse {
  Lease lease = 1;
}

message ListLeaseRequest {}

message ListLeaseResponse {
  repeated Lease leases = 1;
}

message DeleteLeaseRequest {
  string uuid = 1;
}

message DeleteLeaseResponse {}

message AddVirtualMachineRequest {
  string name            = 1;
  uint32 vcpus           = 2;
  uint64 memory_kib      = 3;
  uint32 root_volume_gb  = 4;
  string source_image_id = 5;
  string hypervisor_name = 6;
  uint32 read_bytes_sec  = 7;
  uint32 write_bytes_sec = 8;
  uint32 read_iops_sec   = 9;
  uint32 write_iops_sec  = 10;
}

message AddVirtualMachineResponse {
  string uuid = 1;
  string name = 2;
}

message StartVirtualMachineRequest {
  string uuid = 1;
}

message StartVirtualMachineResponse {
  string uuid = 1;
  string name = 2;
}

message ShowVirtualMachineRequest {
  string uuid = 1;
}

message ShowVirtualMachineResponse {
  VirtualMachine virtual_machine = 1;
}

message DeleteVirtualMachineRequest {
  string uuid = 1;
}

message DeleteVirtualMachineResponse {}

message CreateBridgeRequest {
  string name    = 1;
  int32  vlan_id = 2;
}

message CreateBridgeResponse {
  Bridge bridge = 1;
}

message CreateInternalBridgeRequest {
  string name = 1;
}

message CreateInternalBridgeResponse {
  Bridge bridge = 1;
}

message GetBridgeRequest {
  string uuid = 1;
}

message GetBridgeResponse {
  Bridge bridge = 1;
}

message ListBridgeRequest {}

message ListBridgeResponse {
  repeated Bridge bridges = 1;
}

message DeleteBridgeRequest {
  string uuid = 1;
}

message DeleteBridgeResponse {}

message AttachInterfaceRequest {
  string virtual_machine_id = 1;
  string bridge_id          = 2;
  int64  average            = 3;
  string name               = 4;
  string lease_id           = 5;
}

message AttachInterfaceResponse {
  InterfaceAttachment interface_attachment = 1;
}

message DetachInterfaceRequest {
  string atttachment_id = 1;
}

message DetachInterfaceResponse {}

message GetAttachmentRequest {
  string attachment_id = 1;
}

message GetAttachmentResponse {
  InterfaceAttachment interface_attachment = 1;
}

message ListAttachmentRequest {}

message ListAttachmentResponse {
  repeated InterfaceAttachment interface_attachments = 1;
}

message AddCPUPinningGroupRequest {
  string name          = 1;
  uint32 count_of_core = 2;
}

message AddCPUPinningGroupResponse {
  CPUPinningGroup cpu_pinning_group = 1;
}
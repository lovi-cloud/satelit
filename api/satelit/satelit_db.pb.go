// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: satelit_db.proto

package satelit

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Lease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress     string `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Ip             string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Gateway        string `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServer      string `protobuf:"bytes,4,opt,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
	MetadataServer string `protobuf:"bytes,5,opt,name=metadata_server,json=metadataServer,proto3" json:"metadata_server,omitempty"`
}

func (x *Lease) Reset() {
	*x = Lease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelit_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_satelit_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_satelit_db_proto_rawDescGZIP(), []int{0}
}

func (x *Lease) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Lease) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Lease) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *Lease) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

func (x *Lease) GetMetadataServer() string {
	if x != nil {
		return x.MetadataServer
	}
	return ""
}

type GetLeaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress string `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *GetLeaseRequest) Reset() {
	*x = GetLeaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelit_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaseRequest) ProtoMessage() {}

func (x *GetLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelit_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaseRequest.ProtoReflect.Descriptor instead.
func (*GetLeaseRequest) Descriptor() ([]byte, []int) {
	return file_satelit_db_proto_rawDescGZIP(), []int{1}
}

func (x *GetLeaseRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type GetLeaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lease *Lease `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
}

func (x *GetLeaseResponse) Reset() {
	*x = GetLeaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelit_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaseResponse) ProtoMessage() {}

func (x *GetLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelit_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaseResponse.ProtoReflect.Descriptor instead.
func (*GetLeaseResponse) Descriptor() ([]byte, []int) {
	return file_satelit_db_proto_rawDescGZIP(), []int{2}
}

func (x *GetLeaseResponse) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

var File_satelit_db_proto protoreflect.FileDescriptor

var file_satelit_db_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x05,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x38, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x32, 0x54, 0x0a, 0x0f, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x3b, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_satelit_db_proto_rawDescOnce sync.Once
	file_satelit_db_proto_rawDescData = file_satelit_db_proto_rawDesc
)

func file_satelit_db_proto_rawDescGZIP() []byte {
	file_satelit_db_proto_rawDescOnce.Do(func() {
		file_satelit_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_satelit_db_proto_rawDescData)
	})
	return file_satelit_db_proto_rawDescData
}

var file_satelit_db_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_satelit_db_proto_goTypes = []interface{}{
	(*Lease)(nil),            // 0: satelit.Lease
	(*GetLeaseRequest)(nil),  // 1: satelit.GetLeaseRequest
	(*GetLeaseResponse)(nil), // 2: satelit.GetLeaseResponse
}
var file_satelit_db_proto_depIdxs = []int32{
	0, // 0: satelit.GetLeaseResponse.lease:type_name -> satelit.Lease
	1, // 1: satelit.SatelitDatabase.GetLease:input_type -> satelit.GetLeaseRequest
	2, // 2: satelit.SatelitDatabase.GetLease:output_type -> satelit.GetLeaseResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_satelit_db_proto_init() }
func file_satelit_db_proto_init() {
	if File_satelit_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_satelit_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelit_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelit_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_satelit_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_satelit_db_proto_goTypes,
		DependencyIndexes: file_satelit_db_proto_depIdxs,
		MessageInfos:      file_satelit_db_proto_msgTypes,
	}.Build()
	File_satelit_db_proto = out.File
	file_satelit_db_proto_rawDesc = nil
	file_satelit_db_proto_goTypes = nil
	file_satelit_db_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SatelitDatabaseClient is the client API for SatelitDatabase service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SatelitDatabaseClient interface {
	GetLease(ctx context.Context, in *GetLeaseRequest, opts ...grpc.CallOption) (*GetLeaseResponse, error)
}

type satelitDatabaseClient struct {
	cc grpc.ClientConnInterface
}

func NewSatelitDatabaseClient(cc grpc.ClientConnInterface) SatelitDatabaseClient {
	return &satelitDatabaseClient{cc}
}

func (c *satelitDatabaseClient) GetLease(ctx context.Context, in *GetLeaseRequest, opts ...grpc.CallOption) (*GetLeaseResponse, error) {
	out := new(GetLeaseResponse)
	err := c.cc.Invoke(ctx, "/satelit.SatelitDatabase/GetLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SatelitDatabaseServer is the server API for SatelitDatabase service.
type SatelitDatabaseServer interface {
	GetLease(context.Context, *GetLeaseRequest) (*GetLeaseResponse, error)
}

// UnimplementedSatelitDatabaseServer can be embedded to have forward compatible implementations.
type UnimplementedSatelitDatabaseServer struct {
}

func (*UnimplementedSatelitDatabaseServer) GetLease(context.Context, *GetLeaseRequest) (*GetLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLease not implemented")
}

func RegisterSatelitDatabaseServer(s *grpc.Server, srv SatelitDatabaseServer) {
	s.RegisterService(&_SatelitDatabase_serviceDesc, srv)
}

func _SatelitDatabase_GetLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatabaseServer).GetLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit.SatelitDatabase/GetLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatabaseServer).GetLease(ctx, req.(*GetLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SatelitDatabase_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satelit.SatelitDatabase",
	HandlerType: (*SatelitDatabaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLease",
			Handler:    _SatelitDatabase_GetLease_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "satelit_db.proto",
}

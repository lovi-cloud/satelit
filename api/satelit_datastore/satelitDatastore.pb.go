// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: satelitDatastore.proto

package satelit_datastore

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DHCPLease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress     string `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Ip             string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Network        string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Gateway        string `protobuf:"bytes,4,opt,name=gateway,proto3" json:"gateway,omitempty"`
	DnsServer      string `protobuf:"bytes,5,opt,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
	MetadataServer string `protobuf:"bytes,6,opt,name=metadata_server,json=metadataServer,proto3" json:"metadata_server,omitempty"`
}

func (x *DHCPLease) Reset() {
	*x = DHCPLease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DHCPLease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DHCPLease) ProtoMessage() {}

func (x *DHCPLease) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DHCPLease.ProtoReflect.Descriptor instead.
func (*DHCPLease) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{0}
}

func (x *DHCPLease) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *DHCPLease) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DHCPLease) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *DHCPLease) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *DHCPLease) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

func (x *DHCPLease) GetMetadataServer() string {
	if x != nil {
		return x.MetadataServer
	}
	return ""
}

type GetDHCPLeaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress string `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *GetDHCPLeaseRequest) Reset() {
	*x = GetDHCPLeaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDHCPLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDHCPLeaseRequest) ProtoMessage() {}

func (x *GetDHCPLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDHCPLeaseRequest.ProtoReflect.Descriptor instead.
func (*GetDHCPLeaseRequest) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{1}
}

func (x *GetDHCPLeaseRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type GetDHCPLeaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lease *DHCPLease `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
}

func (x *GetDHCPLeaseResponse) Reset() {
	*x = GetDHCPLeaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDHCPLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDHCPLeaseResponse) ProtoMessage() {}

func (x *GetDHCPLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDHCPLeaseResponse.ProtoReflect.Descriptor instead.
func (*GetDHCPLeaseResponse) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{2}
}

func (x *GetDHCPLeaseResponse) GetLease() *DHCPLease {
	if x != nil {
		return x.Lease
	}
	return nil
}

type GetHostnameByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetHostnameByAddressRequest) Reset() {
	*x = GetHostnameByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostnameByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostnameByAddressRequest) ProtoMessage() {}

func (x *GetHostnameByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostnameByAddressRequest.ProtoReflect.Descriptor instead.
func (*GetHostnameByAddressRequest) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{3}
}

func (x *GetHostnameByAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetHostnameByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *GetHostnameByAddressResponse) Reset() {
	*x = GetHostnameByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHostnameByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostnameByAddressResponse) ProtoMessage() {}

func (x *GetHostnameByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostnameByAddressResponse.ProtoReflect.Descriptor instead.
func (*GetHostnameByAddressResponse) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{4}
}

func (x *GetHostnameByAddressResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type GetISUCONUserKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetISUCONUserKeysRequest) Reset() {
	*x = GetISUCONUserKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetISUCONUserKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetISUCONUserKeysRequest) ProtoMessage() {}

func (x *GetISUCONUserKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetISUCONUserKeysRequest.ProtoReflect.Descriptor instead.
func (*GetISUCONUserKeysRequest) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{5}
}

func (x *GetISUCONUserKeysRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetISUCONUserKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetISUCONUserKeysResponse) Reset() {
	*x = GetISUCONUserKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetISUCONUserKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetISUCONUserKeysResponse) ProtoMessage() {}

func (x *GetISUCONUserKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetISUCONUserKeysResponse.ProtoReflect.Descriptor instead.
func (*GetISUCONUserKeysResponse) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{6}
}

func (x *GetISUCONUserKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type GetISUCONAdminKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetISUCONAdminKeysRequest) Reset() {
	*x = GetISUCONAdminKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetISUCONAdminKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetISUCONAdminKeysRequest) ProtoMessage() {}

func (x *GetISUCONAdminKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetISUCONAdminKeysRequest.ProtoReflect.Descriptor instead.
func (*GetISUCONAdminKeysRequest) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{7}
}

type GetISUCONAdminKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetISUCONAdminKeysResponse) Reset() {
	*x = GetISUCONAdminKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetISUCONAdminKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetISUCONAdminKeysResponse) ProtoMessage() {}

func (x *GetISUCONAdminKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetISUCONAdminKeysResponse.ProtoReflect.Descriptor instead.
func (*GetISUCONAdminKeysResponse) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{8}
}

func (x *GetISUCONAdminKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ListBridgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBridgeRequest) Reset() {
	*x = ListBridgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBridgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBridgeRequest) ProtoMessage() {}

func (x *ListBridgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBridgeRequest.ProtoReflect.Descriptor instead.
func (*ListBridgeRequest) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{9}
}

type ListBridgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bridges []*ListBridgeResponse_Bridge `protobuf:"bytes,1,rep,name=bridges,proto3" json:"bridges,omitempty"`
}

func (x *ListBridgeResponse) Reset() {
	*x = ListBridgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBridgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBridgeResponse) ProtoMessage() {}

func (x *ListBridgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBridgeResponse.ProtoReflect.Descriptor instead.
func (*ListBridgeResponse) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{10}
}

func (x *ListBridgeResponse) GetBridges() []*ListBridgeResponse_Bridge {
	if x != nil {
		return x.Bridges
	}
	return nil
}

type NumaNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs           []*NumaNode_CorePair `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	PhysicalCoreMin uint32               `protobuf:"varint,2,opt,name=physical_core_min,json=physicalCoreMin,proto3" json:"physical_core_min,omitempty"`
	PhysicalCoreMax uint32               `protobuf:"varint,3,opt,name=physical_core_max,json=physicalCoreMax,proto3" json:"physical_core_max,omitempty"`
	LogicalCoreMin  uint32               `protobuf:"varint,4,opt,name=logical_core_min,json=logicalCoreMin,proto3" json:"logical_core_min,omitempty"`
	LogicalCoreMax  uint32               `protobuf:"varint,5,opt,name=logical_core_max,json=logicalCoreMax,proto3" json:"logical_core_max,omitempty"`
}

func (x *NumaNode) Reset() {
	*x = NumaNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumaNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumaNode) ProtoMessage() {}

func (x *NumaNode) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumaNode.ProtoReflect.Descriptor instead.
func (*NumaNode) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{11}
}

func (x *NumaNode) GetPairs() []*NumaNode_CorePair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *NumaNode) GetPhysicalCoreMin() uint32 {
	if x != nil {
		return x.PhysicalCoreMin
	}
	return 0
}

func (x *NumaNode) GetPhysicalCoreMax() uint32 {
	if x != nil {
		return x.PhysicalCoreMax
	}
	return 0
}

func (x *NumaNode) GetLogicalCoreMin() uint32 {
	if x != nil {
		return x.LogicalCoreMin
	}
	return 0
}

func (x *NumaNode) GetLogicalCoreMax() uint32 {
	if x != nil {
		return x.LogicalCoreMax
	}
	return 0
}

type RegisterTeleskopAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string      `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Endpoint string      `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Nodes    []*NumaNode `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *RegisterTeleskopAgentRequest) Reset() {
	*x = RegisterTeleskopAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTeleskopAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTeleskopAgentRequest) ProtoMessage() {}

func (x *RegisterTeleskopAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTeleskopAgentRequest.ProtoReflect.Descriptor instead.
func (*RegisterTeleskopAgentRequest) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterTeleskopAgentRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterTeleskopAgentRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *RegisterTeleskopAgentRequest) GetNodes() []*NumaNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RegisterTeleskopAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterTeleskopAgentResponse) Reset() {
	*x = RegisterTeleskopAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterTeleskopAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterTeleskopAgentResponse) ProtoMessage() {}

func (x *RegisterTeleskopAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterTeleskopAgentResponse.ProtoReflect.Descriptor instead.
func (*RegisterTeleskopAgentResponse) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{13}
}

type ListBridgeResponse_Bridge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VlanId          uint32 `protobuf:"varint,2,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	ParentInterface string `protobuf:"bytes,3,opt,name=parent_interface,json=parentInterface,proto3" json:"parent_interface,omitempty"`
	MetadataCidr    string `protobuf:"bytes,4,opt,name=metadata_cidr,json=metadataCidr,proto3" json:"metadata_cidr,omitempty"`
	InternalOnly    bool   `protobuf:"varint,5,opt,name=internal_only,json=internalOnly,proto3" json:"internal_only,omitempty"`
}

func (x *ListBridgeResponse_Bridge) Reset() {
	*x = ListBridgeResponse_Bridge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBridgeResponse_Bridge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBridgeResponse_Bridge) ProtoMessage() {}

func (x *ListBridgeResponse_Bridge) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBridgeResponse_Bridge.ProtoReflect.Descriptor instead.
func (*ListBridgeResponse_Bridge) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ListBridgeResponse_Bridge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListBridgeResponse_Bridge) GetVlanId() uint32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *ListBridgeResponse_Bridge) GetParentInterface() string {
	if x != nil {
		return x.ParentInterface
	}
	return ""
}

func (x *ListBridgeResponse_Bridge) GetMetadataCidr() string {
	if x != nil {
		return x.MetadataCidr
	}
	return ""
}

func (x *ListBridgeResponse_Bridge) GetInternalOnly() bool {
	if x != nil {
		return x.InternalOnly
	}
	return false
}

type NumaNode_CorePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhysicalCore uint32 `protobuf:"varint,1,opt,name=physical_core,json=physicalCore,proto3" json:"physical_core,omitempty"`
	LogicalCore  uint32 `protobuf:"varint,2,opt,name=logical_core,json=logicalCore,proto3" json:"logical_core,omitempty"`
}

func (x *NumaNode_CorePair) Reset() {
	*x = NumaNode_CorePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_satelitDatastore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumaNode_CorePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumaNode_CorePair) ProtoMessage() {}

func (x *NumaNode_CorePair) ProtoReflect() protoreflect.Message {
	mi := &file_satelitDatastore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumaNode_CorePair.ProtoReflect.Descriptor instead.
func (*NumaNode_CorePair) Descriptor() ([]byte, []int) {
	return file_satelitDatastore_proto_rawDescGZIP(), []int{11, 0}
}

func (x *NumaNode_CorePair) GetPhysicalCore() uint32 {
	if x != nil {
		return x.PhysicalCore
	}
	return 0
}

func (x *NumaNode_CorePair) GetLogicalCore() uint32 {
	if x != nil {
		return x.LogicalCore
	}
	return 0
}

var File_satelitDatastore_proto protoreflect.FileDescriptor

var file_satelitDatastore_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x09,
	0x44, 0x48, 0x43, 0x50, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43,
	0x50, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4a,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x48, 0x43, 0x50, 0x4c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43, 0x4f, 0x4e, 0x55, 0x73, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43,
	0x4f, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55,
	0x43, 0x4f, 0x4e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43, 0x4f, 0x4e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x07, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x52, 0x07, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x06, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x69, 0x64,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xc6, 0x02, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x61, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x2e,
	0x43, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x43, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x69,
	0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x1a, 0x52, 0x0a, 0x08, 0x43,
	0x6f, 0x72, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x22,
	0x89, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65,
	0x73, 0x6b, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x61,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x73, 0x6b, 0x6f, 0x70, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb2, 0x05, 0x0a,
	0x10, 0x53, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x26, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x48, 0x43, 0x50, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x48, 0x43, 0x50, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x2e, 0x73,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43, 0x4f, 0x4e, 0x55, 0x73, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x2b, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43,
	0x4f, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43, 0x4f, 0x4e, 0x55,
	0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55, 0x43, 0x4f, 0x4e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x53, 0x55, 0x43, 0x4f, 0x4e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x53, 0x55,
	0x43, 0x4f, 0x4e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x61, 0x74,
	0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x6c, 0x65, 0x73, 0x6b, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x73,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x73, 0x6b, 0x6f,
	0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x73, 0x6b,
	0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x3b, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_satelitDatastore_proto_rawDescOnce sync.Once
	file_satelitDatastore_proto_rawDescData = file_satelitDatastore_proto_rawDesc
)

func file_satelitDatastore_proto_rawDescGZIP() []byte {
	file_satelitDatastore_proto_rawDescOnce.Do(func() {
		file_satelitDatastore_proto_rawDescData = protoimpl.X.CompressGZIP(file_satelitDatastore_proto_rawDescData)
	})
	return file_satelitDatastore_proto_rawDescData
}

var file_satelitDatastore_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_satelitDatastore_proto_goTypes = []interface{}{
	(*DHCPLease)(nil),                     // 0: satelit_datastore.DHCPLease
	(*GetDHCPLeaseRequest)(nil),           // 1: satelit_datastore.GetDHCPLeaseRequest
	(*GetDHCPLeaseResponse)(nil),          // 2: satelit_datastore.GetDHCPLeaseResponse
	(*GetHostnameByAddressRequest)(nil),   // 3: satelit_datastore.GetHostnameByAddressRequest
	(*GetHostnameByAddressResponse)(nil),  // 4: satelit_datastore.GetHostnameByAddressResponse
	(*GetISUCONUserKeysRequest)(nil),      // 5: satelit_datastore.GetISUCONUserKeysRequest
	(*GetISUCONUserKeysResponse)(nil),     // 6: satelit_datastore.GetISUCONUserKeysResponse
	(*GetISUCONAdminKeysRequest)(nil),     // 7: satelit_datastore.GetISUCONAdminKeysRequest
	(*GetISUCONAdminKeysResponse)(nil),    // 8: satelit_datastore.GetISUCONAdminKeysResponse
	(*ListBridgeRequest)(nil),             // 9: satelit_datastore.ListBridgeRequest
	(*ListBridgeResponse)(nil),            // 10: satelit_datastore.ListBridgeResponse
	(*NumaNode)(nil),                      // 11: satelit_datastore.NumaNode
	(*RegisterTeleskopAgentRequest)(nil),  // 12: satelit_datastore.RegisterTeleskopAgentRequest
	(*RegisterTeleskopAgentResponse)(nil), // 13: satelit_datastore.RegisterTeleskopAgentResponse
	(*ListBridgeResponse_Bridge)(nil),     // 14: satelit_datastore.ListBridgeResponse.Bridge
	(*NumaNode_CorePair)(nil),             // 15: satelit_datastore.NumaNode.CorePair
}
var file_satelitDatastore_proto_depIdxs = []int32{
	0,  // 0: satelit_datastore.GetDHCPLeaseResponse.lease:type_name -> satelit_datastore.DHCPLease
	14, // 1: satelit_datastore.ListBridgeResponse.bridges:type_name -> satelit_datastore.ListBridgeResponse.Bridge
	15, // 2: satelit_datastore.NumaNode.pairs:type_name -> satelit_datastore.NumaNode.CorePair
	11, // 3: satelit_datastore.RegisterTeleskopAgentRequest.nodes:type_name -> satelit_datastore.NumaNode
	1,  // 4: satelit_datastore.SatelitDatastore.GetDHCPLease:input_type -> satelit_datastore.GetDHCPLeaseRequest
	3,  // 5: satelit_datastore.SatelitDatastore.GetHostnameByAddress:input_type -> satelit_datastore.GetHostnameByAddressRequest
	5,  // 6: satelit_datastore.SatelitDatastore.GetISUCONUserKeys:input_type -> satelit_datastore.GetISUCONUserKeysRequest
	7,  // 7: satelit_datastore.SatelitDatastore.GetISUCONAdminKeys:input_type -> satelit_datastore.GetISUCONAdminKeysRequest
	9,  // 8: satelit_datastore.SatelitDatastore.ListBridge:input_type -> satelit_datastore.ListBridgeRequest
	12, // 9: satelit_datastore.SatelitDatastore.RegisterTeleskopAgent:input_type -> satelit_datastore.RegisterTeleskopAgentRequest
	2,  // 10: satelit_datastore.SatelitDatastore.GetDHCPLease:output_type -> satelit_datastore.GetDHCPLeaseResponse
	4,  // 11: satelit_datastore.SatelitDatastore.GetHostnameByAddress:output_type -> satelit_datastore.GetHostnameByAddressResponse
	6,  // 12: satelit_datastore.SatelitDatastore.GetISUCONUserKeys:output_type -> satelit_datastore.GetISUCONUserKeysResponse
	8,  // 13: satelit_datastore.SatelitDatastore.GetISUCONAdminKeys:output_type -> satelit_datastore.GetISUCONAdminKeysResponse
	10, // 14: satelit_datastore.SatelitDatastore.ListBridge:output_type -> satelit_datastore.ListBridgeResponse
	13, // 15: satelit_datastore.SatelitDatastore.RegisterTeleskopAgent:output_type -> satelit_datastore.RegisterTeleskopAgentResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_satelitDatastore_proto_init() }
func file_satelitDatastore_proto_init() {
	if File_satelitDatastore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_satelitDatastore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DHCPLease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDHCPLeaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDHCPLeaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostnameByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHostnameByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetISUCONUserKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetISUCONUserKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetISUCONAdminKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetISUCONAdminKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBridgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBridgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumaNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTeleskopAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterTeleskopAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBridgeResponse_Bridge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_satelitDatastore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumaNode_CorePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_satelitDatastore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_satelitDatastore_proto_goTypes,
		DependencyIndexes: file_satelitDatastore_proto_depIdxs,
		MessageInfos:      file_satelitDatastore_proto_msgTypes,
	}.Build()
	File_satelitDatastore_proto = out.File
	file_satelitDatastore_proto_rawDesc = nil
	file_satelitDatastore_proto_goTypes = nil
	file_satelitDatastore_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SatelitDatastoreClient is the client API for SatelitDatastore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SatelitDatastoreClient interface {
	GetDHCPLease(ctx context.Context, in *GetDHCPLeaseRequest, opts ...grpc.CallOption) (*GetDHCPLeaseResponse, error)
	GetHostnameByAddress(ctx context.Context, in *GetHostnameByAddressRequest, opts ...grpc.CallOption) (*GetHostnameByAddressResponse, error)
	GetISUCONUserKeys(ctx context.Context, in *GetISUCONUserKeysRequest, opts ...grpc.CallOption) (*GetISUCONUserKeysResponse, error)
	GetISUCONAdminKeys(ctx context.Context, in *GetISUCONAdminKeysRequest, opts ...grpc.CallOption) (*GetISUCONAdminKeysResponse, error)
	ListBridge(ctx context.Context, in *ListBridgeRequest, opts ...grpc.CallOption) (*ListBridgeResponse, error)
	RegisterTeleskopAgent(ctx context.Context, in *RegisterTeleskopAgentRequest, opts ...grpc.CallOption) (*RegisterTeleskopAgentResponse, error)
}

type satelitDatastoreClient struct {
	cc grpc.ClientConnInterface
}

func NewSatelitDatastoreClient(cc grpc.ClientConnInterface) SatelitDatastoreClient {
	return &satelitDatastoreClient{cc}
}

func (c *satelitDatastoreClient) GetDHCPLease(ctx context.Context, in *GetDHCPLeaseRequest, opts ...grpc.CallOption) (*GetDHCPLeaseResponse, error) {
	out := new(GetDHCPLeaseResponse)
	err := c.cc.Invoke(ctx, "/satelit_datastore.SatelitDatastore/GetDHCPLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *satelitDatastoreClient) GetHostnameByAddress(ctx context.Context, in *GetHostnameByAddressRequest, opts ...grpc.CallOption) (*GetHostnameByAddressResponse, error) {
	out := new(GetHostnameByAddressResponse)
	err := c.cc.Invoke(ctx, "/satelit_datastore.SatelitDatastore/GetHostnameByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *satelitDatastoreClient) GetISUCONUserKeys(ctx context.Context, in *GetISUCONUserKeysRequest, opts ...grpc.CallOption) (*GetISUCONUserKeysResponse, error) {
	out := new(GetISUCONUserKeysResponse)
	err := c.cc.Invoke(ctx, "/satelit_datastore.SatelitDatastore/GetISUCONUserKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *satelitDatastoreClient) GetISUCONAdminKeys(ctx context.Context, in *GetISUCONAdminKeysRequest, opts ...grpc.CallOption) (*GetISUCONAdminKeysResponse, error) {
	out := new(GetISUCONAdminKeysResponse)
	err := c.cc.Invoke(ctx, "/satelit_datastore.SatelitDatastore/GetISUCONAdminKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *satelitDatastoreClient) ListBridge(ctx context.Context, in *ListBridgeRequest, opts ...grpc.CallOption) (*ListBridgeResponse, error) {
	out := new(ListBridgeResponse)
	err := c.cc.Invoke(ctx, "/satelit_datastore.SatelitDatastore/ListBridge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *satelitDatastoreClient) RegisterTeleskopAgent(ctx context.Context, in *RegisterTeleskopAgentRequest, opts ...grpc.CallOption) (*RegisterTeleskopAgentResponse, error) {
	out := new(RegisterTeleskopAgentResponse)
	err := c.cc.Invoke(ctx, "/satelit_datastore.SatelitDatastore/RegisterTeleskopAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SatelitDatastoreServer is the server API for SatelitDatastore service.
type SatelitDatastoreServer interface {
	GetDHCPLease(context.Context, *GetDHCPLeaseRequest) (*GetDHCPLeaseResponse, error)
	GetHostnameByAddress(context.Context, *GetHostnameByAddressRequest) (*GetHostnameByAddressResponse, error)
	GetISUCONUserKeys(context.Context, *GetISUCONUserKeysRequest) (*GetISUCONUserKeysResponse, error)
	GetISUCONAdminKeys(context.Context, *GetISUCONAdminKeysRequest) (*GetISUCONAdminKeysResponse, error)
	ListBridge(context.Context, *ListBridgeRequest) (*ListBridgeResponse, error)
	RegisterTeleskopAgent(context.Context, *RegisterTeleskopAgentRequest) (*RegisterTeleskopAgentResponse, error)
}

// UnimplementedSatelitDatastoreServer can be embedded to have forward compatible implementations.
type UnimplementedSatelitDatastoreServer struct {
}

func (*UnimplementedSatelitDatastoreServer) GetDHCPLease(context.Context, *GetDHCPLeaseRequest) (*GetDHCPLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDHCPLease not implemented")
}
func (*UnimplementedSatelitDatastoreServer) GetHostnameByAddress(context.Context, *GetHostnameByAddressRequest) (*GetHostnameByAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostnameByAddress not implemented")
}
func (*UnimplementedSatelitDatastoreServer) GetISUCONUserKeys(context.Context, *GetISUCONUserKeysRequest) (*GetISUCONUserKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetISUCONUserKeys not implemented")
}
func (*UnimplementedSatelitDatastoreServer) GetISUCONAdminKeys(context.Context, *GetISUCONAdminKeysRequest) (*GetISUCONAdminKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetISUCONAdminKeys not implemented")
}
func (*UnimplementedSatelitDatastoreServer) ListBridge(context.Context, *ListBridgeRequest) (*ListBridgeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBridge not implemented")
}
func (*UnimplementedSatelitDatastoreServer) RegisterTeleskopAgent(context.Context, *RegisterTeleskopAgentRequest) (*RegisterTeleskopAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterTeleskopAgent not implemented")
}

func RegisterSatelitDatastoreServer(s *grpc.Server, srv SatelitDatastoreServer) {
	s.RegisterService(&_SatelitDatastore_serviceDesc, srv)
}

func _SatelitDatastore_GetDHCPLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDHCPLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatastoreServer).GetDHCPLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit_datastore.SatelitDatastore/GetDHCPLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatastoreServer).GetDHCPLease(ctx, req.(*GetDHCPLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SatelitDatastore_GetHostnameByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostnameByAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatastoreServer).GetHostnameByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit_datastore.SatelitDatastore/GetHostnameByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatastoreServer).GetHostnameByAddress(ctx, req.(*GetHostnameByAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SatelitDatastore_GetISUCONUserKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetISUCONUserKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatastoreServer).GetISUCONUserKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit_datastore.SatelitDatastore/GetISUCONUserKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatastoreServer).GetISUCONUserKeys(ctx, req.(*GetISUCONUserKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SatelitDatastore_GetISUCONAdminKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetISUCONAdminKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatastoreServer).GetISUCONAdminKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit_datastore.SatelitDatastore/GetISUCONAdminKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatastoreServer).GetISUCONAdminKeys(ctx, req.(*GetISUCONAdminKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SatelitDatastore_ListBridge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBridgeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatastoreServer).ListBridge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit_datastore.SatelitDatastore/ListBridge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatastoreServer).ListBridge(ctx, req.(*ListBridgeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SatelitDatastore_RegisterTeleskopAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTeleskopAgentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SatelitDatastoreServer).RegisterTeleskopAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/satelit_datastore.SatelitDatastore/RegisterTeleskopAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SatelitDatastoreServer).RegisterTeleskopAgent(ctx, req.(*RegisterTeleskopAgentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SatelitDatastore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "satelit_datastore.SatelitDatastore",
	HandlerType: (*SatelitDatastoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDHCPLease",
			Handler:    _SatelitDatastore_GetDHCPLease_Handler,
		},
		{
			MethodName: "GetHostnameByAddress",
			Handler:    _SatelitDatastore_GetHostnameByAddress_Handler,
		},
		{
			MethodName: "GetISUCONUserKeys",
			Handler:    _SatelitDatastore_GetISUCONUserKeys_Handler,
		},
		{
			MethodName: "GetISUCONAdminKeys",
			Handler:    _SatelitDatastore_GetISUCONAdminKeys_Handler,
		},
		{
			MethodName: "ListBridge",
			Handler:    _SatelitDatastore_ListBridge_Handler,
		},
		{
			MethodName: "RegisterTeleskopAgent",
			Handler:    _SatelitDatastore_RegisterTeleskopAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "satelitDatastore.proto",
}
